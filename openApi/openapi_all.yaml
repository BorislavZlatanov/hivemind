openapi: 3.0.2
info:
  title: Hivemind OpenAPI Specification
  description: An OpenAPI specification for Hivemind
  version: "1.0"
servers:
  - url: https://api.hive.blog
    description: hive.blog API Service
  - url: https://anyx.io
    description: anyx.io API Service
  - url: https://beta.openhive.network
    description: beta.openhive.network API Service
  - url: http://localhost:8080
    description: Hivemind local API Service
components:
  schemas:
    ListCommunityRoles:
      type: object
      description: "array of arrays with 3 strings: name, role_name, title"
      items:
        type: array
        items:
          type: string
        minItems: 3
        maxItems: 3
    CommunityContext:
      type: object
      properties:
        role:
          type: string
        subscribed:
          type: boolean
        title:
          type: string
          maxLength: 140
          minLength: 0
    ErrorMessage:
      type: object
      required:
        - jsonrpc
        - error
        - id
      properties:
        jsonrpc:
          type: string
        error:
          type: object
          required:
            - code
            - message
            - data
          properties:
            code:
              type: string
            message:
              type: string
            data:
              type: string
        id:
          type: integer
    CurrencyValue:
      type: object
      properties:
        amount:
          type: integer
          example: 756
        nai:
          type: string
          example: "@@000000013"
        precision:
          type: integer
          example: 3
    Comments:
      type: object
      additionalProperties: false
      required:
        - jsonrpc
        - result
        - id
      properties:
        jsonrpc:
          type: string
          example: "2.0"
        id:
          type: integer
          example: 1
        result:
          type: object
          required:
            - comments
          properties:
            comments:
              type: array
              items:
                type: object
                additionalProperties: false
                required:
                  - abs_rshares
                  - active
                  - allow_curation_rewards
                  - allow_replies
                  - allow_votes
                  - author
                  - author_rewards
                  - beneficiaries
                  - body
                  - cashout_time
                  - category
                  - children
                  - children_abs_rshares
                  - created
                  - curator_payout_value
                  - depth
                  - id
                  - json_metadata
                  - last_payout
                  - last_update
                  - max_accepted_payout
                  - max_cashout_time
                  - net_rshares
                  - net_votes
                  - parent_author
                  - parent_permlink
                  - percent_hbd
                  - permlink
                  - reward_weight
                  - root_author
                  - root_permlink
                  - title
                  - total_payout_value
                  - total_vote_weight
                  - vote_rshares
                properties:
                  abs_rshares:
                    type: integer
                    example: 0
                  active:
                    type: string
                    format: date-time
                    example: 2016-08-24T09:30:03
                  allow_curation_rewards:
                    type: boolean
                    example: true
                  allow_replies:
                    type: boolean
                    example: true
                  allow_votes:
                    type: boolean
                    example: true
                  author:
                    type: string
                    example: steemit
                  author_rewards:
                    type: integer
                    example: 3548
                  beneficiaries:
                    type: array
                    items:
                      type: string
                      example: steemit
                  body:
                    type: string
                    example: Steemit is a social media platform where anyone can earn STEEM points
                      by posting. The more people who like a post, the more
                      STEEM the poster earns. Anyone can sell their STEEM for
                      cash or vest it to boost their voting power.
                  cashout_time:
                    type: string
                    format: date-time
                    example: 2016-08-24T09:30:03
                  category:
                    type: string
                    example: meta
                  children:
                    type: integer
                    example: 3548
                  children_abs_rshares:
                    type: integer
                    example: 3548
                  created:
                    type: string
                    format: date-time
                    example: 2016-08-24T09:30:03
                  curator_payout_value: {}
                  depth:
                    type: integer
                    example: 0
                  id:
                    type: integer
                    example: 1
                  json_metadata:
                    type: string
                    example: ""
                  last_payout:
                    type: string
                    format: date-time
                    example: 2016-08-24T09:30:03
                  last_update:
                    type: string
                    format: date-time
                    example: 2016-08-24T09:30:03
                  max_accepted_payout: {}
                  max_cashout_time:
                    type: string
                    format: date-time
                    example: 2016-08-24T09:30:03
                  net_rshares:
                    type: integer
                    example: 0
                  net_votes:
                    type: integer
                    example: 0
                  parent_author:
                    type: string
                    example: steemit
                  parent_permlink:
                    type: string
                    example: meta
                  percent_hbd:
                    type: integer
                    example: 10000
                  permlink:
                    type: string
                    example: firstpost
                  reward_weight:
                    type: integer
                    example: 10000
                  root_author:
                    type: string
                    example: steemit
                  root_permlink:
                    type: string
                    example: firstpost
                  title:
                    type: string
                    example: Welcome to Hive!
                  total_payout_value: {}
                  total_vote_weight:
                    type: integer
                    example: 0
                  vote_rshares:
                    type: integer
                    example: 0
    Comment:
      type: object
      additionalProperties: false
      required:
        - abs_rshares
        - active
        - allow_curation_rewards
        - allow_replies
        - allow_votes
        - author
        - author_rewards
        - beneficiaries
        - body
        - cashout_time
        - category
        - children
        - children_abs_rshares
        - created
        - curator_payout_value
        - depth
        - id
        - json_metadata
        - last_payout
        - last_update
        - max_accepted_payout
        - max_cashout_time
        - net_rshares
        - net_votes
        - parent_author
        - parent_permlink
        - percent_hbd
        - permlink
        - reward_weight
        - root_author
        - root_permlink
        - title
        - total_payout_value
        - total_vote_weight
        - vote_rshares
      properties:
        abs_rshares:
          type: integer
          example: 0
        active:
          type: string
          format: date-time
          example: 2016-08-24T09:30:03
        allow_curation_rewards:
          type: boolean
          example: true
        allow_replies:
          type: boolean
          example: true
        allow_votes:
          type: boolean
          example: true
        author:
          type: string
          example: steemit
        author_rewards:
          type: integer
          example: 3548
        beneficiaries:
          type: array
          items:
            type: string
            example: steemit
        body:
          type: string
          example: Steemit is a social media platform where anyone can earn STEEM points
            by posting. The more people who like a post, the more STEEM the
            poster earns. Anyone can sell their STEEM for cash or vest it to
            boost their voting power.
        cashout_time:
          type: string
          format: date-time
          example: 2016-08-24T09:30:03
        category:
          type: string
          example: meta
        children:
          type: integer
          example: 3548
        children_abs_rshares:
          type: integer
          example: 3548
        created:
          type: string
          format: date-time
          example: 2016-08-24T09:30:03
        curator_payout_value: {}
        depth:
          type: integer
          example: 0
        id:
          type: integer
          example: 1
        json_metadata:
          type: string
          example: ""
        last_payout:
          type: string
          format: date-time
          example: 2016-08-24T09:30:03
        last_update:
          type: string
          format: date-time
          example: 2016-08-24T09:30:03
        max_accepted_payout: {}
        max_cashout_time:
          type: string
          format: date-time
          example: 2016-08-24T09:30:03
        net_rshares:
          type: integer
          example: 0
        net_votes:
          type: integer
          example: 0
        parent_author:
          type: string
          example: steemit
        parent_permlink:
          type: string
          example: meta
        percent_hbd:
          type: integer
          example: 10000
        permlink:
          type: string
          example: firstpost
        reward_weight:
          type: integer
          example: 10000
        root_author:
          type: string
          example: steemit
        root_permlink:
          type: string
          example: firstpost
        title:
          type: string
          example: Welcome to Hive!
        total_payout_value: {}
        total_vote_weight:
          type: integer
          example: 0
        vote_rshares:
          type: integer
          example: 0
    Votes:
      type: object
      additionalProperties: false
      required:
        - jsonrpc
        - result
        - id
      properties:
        jsonrpc:
          type: string
          example: "2.0"
        id:
          type: integer
          example: 1
        result:
          type: object
          required:
            - votes
          properties:
            votes:
              type: array
              items:
                type: object
                additionalProperties: false
                required:
                  - author
                  - voter
                  - id
                  - last_update
                  - num_changes
                  - permlink
                  - rshares
                  - vote_percent
                  - weight
                properties:
                  author:
                    type: string
                    example: kental
                  voter:
                    type: string
                    example: eduardf
                  id:
                    type: integer
                    example: 1011491
                  last_update:
                    type: string
                    format: date-time
                    example: 2016-08-24T09:30:03
                  num_changes:
                    type: integer
                    example: 1
                  permlink:
                    type: string
                    example: hi-steem-my-russian-trip-on-the-bike-big-party-in-moscow-tour-of-moscow-by-slava
                  rshares:
                    type: integer
                    example: 2329409778
                  vote_percent:
                    type: integer
                    example: 10000
                  weight:
                    type: integer
                    example: 5725626236557488
paths:
  /#bridge.get_community:
    post:
      tags:
        - Community
      description: Gets community
      operationId: bridge.get_community
      requestBody:
        description: community name and optional observer
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - bridge.get_community
                params:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: community name
                      example: hive-186713
                    observer:
                      type: string
                      description: account name
                      example: good-karma
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: Community result
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - jsonrpc
                  - result
                  - id
                properties:
                  jsonrpc:
                    type: string
                    example: "2.0"
                  id:
                    type: integer
                    example: 1
                  result:
                    type: object
                    required:
                      - id
                      - about
                      - description
                      - avatar_url
                      - context
                      - created_at
                      - flag_text
                      - is_nsfw
                      - lang
                      - name
                      - num_authors
                      - num_pending
                      - settings
                      - subscribers
                      - sum_pending
                      - team
                      - title
                      - type_id
                    properties:
                      id:
                        type: integer
                      about:
                        type: string
                      description:
                        type: string
                      admins:
                        type: array
                        items:
                          type: string
                      avatar_url:
                        type: string
                      context: {}
                      created_at:
                        type: string
                        format: date-time
                      flag_text:
                        type: string
                      is_nsfw:
                        type: boolean
                      lang:
                        type: string
                      name:
                        type: string
                      num_authors:
                        type: integer
                      num_pending:
                        type: integer
                      settings:
                        type: object
                      subscribers:
                        type: integer
                      sum_pending:
                        type: integer
                      team: {}
                      title:
                        type: string
                      type_id:
                        type: integer
              example:
                jsonrpc: "2.0"
                result:
                  id: 92511
                  name: hive-186713
                  title: Test group
                  about: this is about field
                  lang: pl
                  type_id: 1
                  is_nsfw: true
                  subscribers: 0
                  created_at: 2016-09-15 19:47:15
                  sum_pending: 0
                  num_pending: 0
                  num_authors: 0
                  avatar_url: ""
                  description: |-
                    this is description
                    second line of description
                  flag_text: |-
                    first rule
                    second rule
                    third rule
                    and the last rule
                  settings: {}
                  context:
                    role: guest
                    subscribed: false
                    title: ""
                  team:
                    - - hive-186713
                      - owner
                      - ""
                id: 1
  /#bridge.get_community_context:
    post:
      tags:
        - Community
      description: Gets community context
      operationId: bridge.get_community_context
      requestBody:
        description: community name and account for context
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - bridge.get_community_context
                params:
                  type: object
                  required:
                    - name
                    - account
                  properties:
                    name:
                      type: string
                      description: community name
                      example: hive-186713
                    account:
                      type: string
                      description: account name
                      example: good-karma
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: Community context result
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - jsonrpc
                  - result
                  - id
                properties:
                  jsonrpc:
                    type: string
                    example: "2.0"
                  id:
                    type: integer
                    example: 1
                  result: {}
  /#bridge.list_all_subscriptions:
    post:
      tags:
        - Community
      description: Lists all community contexts from communities given account is
        subscribed to.
      operationId: bridge.list_all_subscriptions
      requestBody:
        description: points to valid account (not necessarily subscibed to any community)
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                method:
                  type: string
                  enum:
                    - bridge.list_all_subscriptions
                params:
                  type: object
                  required:
                    - account
                  properties:
                    account:
                      type: string
                      description: account name
                      example: good-karma
                jsonrpc:
                  type: string
                  default: "2.0"
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: all subscriptions list
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                items:
                  type: array
                  items:
                    type: string
                  minItems: 4
                  maxItems: 4
  /#bridge.list_communities:
    post:
      tags:
        - Community
      description: Gets community
      operationId: bridge.list_communities
      requestBody:
        description: "optional parameters: last, limit, query, sort, observer"
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - bridge.list_communities
                params:
                  type: object
                  properties:
                    last:
                      type: string
                      description: name of community; paging mechanism (cuts out this and "higher"
                        communities, depends on chosen ranking)
                      example: hive-135485
                    limit:
                      type: integer
                      description: limit number of listed communities
                      minimum: 1
                      maximum: 100
                      default: 100
                    query:
                      type: string
                      description: when given turns on filtering for given set of words - words are
                        looked for in "title" and "about" fields
                      example: World
                    sort:
                      type: string
                      description: " determines order of returned communities"
                      enum:
                        - rank
                        - new
                        - subs
                      default: rank
                    observer:
                      type: string
                      description: (can be skipped or passed empty), when passed has to point to valid
                        account used to show relation between account and
                        community (subscribed, role and title)
                      example: good-karma
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - jsonrpc
                  - result
                  - id
                properties:
                  jsonrpc:
                    type: string
                    example: "2.0"
                  id:
                    type: integer
                    example: 1
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - about
                        - avatar_url
                        - context
                        - created_at
                        - is_nsfw
                        - lang
                        - name
                        - num_authors
                        - num_pending
                        - subscribers
                        - sum_pending
                        - title
                        - type_id
                      properties:
                        id:
                          type: integer
                        about:
                          type: string
                        admins:
                          type: array
                          items:
                            type: string
                        avatar_url:
                          type: string
                        context: {}
                        created_at:
                          type: string
                          format: date-time
                        is_nsfw:
                          type: boolean
                        lang:
                          type: string
                        name:
                          type: string
                        num_authors:
                          type: integer
                        num_pending:
                          type: integer
                        subscribers:
                          type: integer
                        sum_pending:
                          type: integer
                        title:
                          type: string
                        type_id:
                          type: integer
  /#bridge.list_community_roles:
    post:
      tags:
        - Community
      description: Gets community
      operationId: bridge.list_community_roles
      requestBody:
        description: community name and optional observer
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - bridge.list_community_roles
                params:
                  type: object
                  required:
                    - community
                  properties:
                    community:
                      type: string
                      description: community name
                      example: hive-186713
                    last:
                      type: string
                      description: name of community; paging mechanism (cuts out this and "higher"
                        communities, depends on chosen ranking)
                      example: hive-186713
                    limit:
                      type: integer
                      description: limit number of listed communities
                      minimum: 1
                      maximum: 100
                      default: 100
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Community roles
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ListCommunityRoles"
  /#bridge.list_pop_communities:
    post:
      tags:
        - Community
      description: Gets community
      operationId: bridge.list_pop_communities
      requestBody:
        description: "optional parameter: limit"
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - bridge.list_pop_communities
                params:
                  type: object
                  properties:
                    limit:
                      type: integer
                      description: limit number of listed communities
                      minimum: 1
                      maximum: 25
                      default: 25
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: "array of arrays with 2 strings: community name and title"
                items:
                  type: array
                  items:
                    type: string
                  minItems: 2
                  maxItems: 2
  /#bridge.list_subscribers:
    post:
      tags:
        - Community
      description: list subscribers
      operationId: bridge.list_subscribers
      requestBody:
        description: "required community, optional: last, limit"
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - bridge.list_subscribers
                params:
                  type: object
                  required:
                    - community
                  properties:
                    community:
                      type: string
                      description: community name
                      example: hive-186713
                    last:
                      type: string
                      description: ' name of subscriber; paging mechanism (cuts out this and "higher"
                        subscribers, depends on created at desc)'
                      example: hive-186713
                    limit:
                      type: integer
                      description: limit number of listed subscribers
                      minimum: 1
                      maximum: 100
                      default: 100
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                description: "array of arrays with 4 strings: account name, role name, title,
                  created_at"
                items:
                  type: array
                  items:
                    type: string
                  minItems: 4
                  maxItems: 4
  /#database_api.find_comments:
    post:
      tags:
        - Database
      description: find comments
      operationId: database_api.find_comments
      requestBody:
        description: Looks for given comments.
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.find_comments
                params:
                  type: object
                  required:
                    - comments
                  properties:
                    comments:
                      type: array
                      description: '"comments": [["{author}","{permlink}"],*] author + permlink :
                        optional (can be left blank or skipped), but only makes
                        sense when it points to valid post there can be up to
                        1000 such pairs in single call, duplicates are not
                        squashed, invalid pairs are ignored'
                      example:
                        - - steemit
                          - firstpost
                      items:
                        type: string
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Comments"
  "/#database_api.list_comments[by_author_last_update]":
    post:
      tags:
        - Database
      description: list comments
      operationId: database_api.list_comments[by_author_last_update]
      requestBody:
        description: Lists posts of given author that are not newer than given date.
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.list_comments
                params:
                  type: object
                  required:
                    - start
                    - order
                  properties:
                    start:
                      description: '"start":
                        ["{author}","{update_date}","{start_author}","{start_permlink}"]'
                      example:
                        - gtg
                        - 2016-09-06T18:47:33
                        - gtg
                        - missing-rewards-while-mining
                    limit:
                      type: integer
                      description: optional 1..1000, default = 1000
                      default: 1000
                      example: 10
                    order:
                      type: string
                      enum:
                        - by_author_last_update
                      example: by_author_last_update
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Comments"
  "/#database_api.list_comments[by_cashout_time]":
    post:
      tags:
        - Database
      description: list comments
      operationId: database_api.list_comments[by_cashout_time]
      requestBody:
        description: Lists comments with cashout at or later than given date
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.list_comments
                params:
                  type: object
                  required:
                    - start
                    - order
                  properties:
                    start:
                      description: '["{cashout_date}","{start_author}","{start_permlink}"]
                        cashout_date : mandatory; cashout date in format "Y-m-d
                        H:M:S" or "Y-m-dTH:M:S", if year 1969 is passed it means
                        paidout posts start_author + start_permlink : optional
                        (can be left blank but not skipped), when given have to
                        point to valid post; paging mechanism'
                      example:
                        - 1969-12-31T23:59:59
                        - proskynneo
                        - steemit-firstpost-1
                    limit:
                      type: integer
                      description: optional 1..1000, default = 1000
                      default: 1000
                      example: 10
                    order:
                      type: string
                      enum:
                        - by_cashout_time
                      example: by_cashout_time
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Comments"
  "/#database_api.list_comments[by_last_update]":
    post:
      tags:
        - Database
      description: list comments
      operationId: database_api.list_comments[by_last_update]
      requestBody:
        description: Lists replies to posts of given author that are not newer than
          given date.
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.list_comments
                params:
                  type: object
                  required:
                    - start
                    - order
                  properties:
                    start:
                      description: '["{parent_author}","{update_date}","{start_author}","{start_permlink}"]
                        parent_author : mandatory; points to valid account
                        update_date : mandatory; update date in format "Y-m-d
                        H:M:S" or "Y-m-dTH:M:S" start_author + start_permlink :
                        optional (can be left blank but not skipped), when given
                        have to point to valid post; paging mechanism'
                      example:
                        - sykochica
                        - 2016-08-24T19:59:42
                        - williambanks
                        - re-sykochica-re-williambanks-re-sykochica-what-is-god-as-told-by-a-13-year-old-20160823t021931580z
                    limit:
                      type: integer
                      description: optional 1..1000, default = 1000
                      default: 1000
                      example: 10
                    order:
                      type: string
                      enum:
                        - by_last_update
                      example: by_last_update
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Comments"
  "/#database_api.list_comments[by_parent]":
    post:
      tags:
        - Database
      description: list comments
      operationId: database_api.list_comments[by_parent]
      requestBody:
        description: Lists replies to given post.
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.list_comments
                params:
                  type: object
                  required:
                    - start
                    - order
                  properties:
                    start:
                      description: '["{parent_author}","{parent_permlink}","{start_author}","{start_permlink}"]
                        parent_author + parent_permlink : mandatory; points to
                        valid post start_author + start_permlink : optional (can
                        be left blank but not skipped), when given have to point
                        to valid post; paging mechanism'
                      example:
                        - allasyummyfood
                        - re-givemeyoursteem-winners-of-steemit-food-challenge-3-desserts-to-die-for-20160829t004616466z
                        - vlad
                        - re-allasyummyfood-re-givemeyoursteem-winners-of-steemit-food-challenge-3-desserts-to-die-for-20160829t011002757z
                    limit:
                      type: integer
                      description: optional 1..1000, default = 1000
                      default: 1000
                      example: 10
                    order:
                      type: string
                      enum:
                        - by_parent
                      example: by_parent
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Comments"
  "/#database_api.list_comments[by_permlink]":
    post:
      tags:
        - Database
      description: list comments
      operationId: database_api.list_comments[by_permlink]
      requestBody:
        description: Lists comments sorted by author and later with permlink, starting
          not earlier than given parameters. Can be used also in situation when
          only part of author name or permlink is known.
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.list_comments
                params:
                  type: object
                  required:
                    - start
                    - order
                  properties:
                    start:
                      description: '["{author}","{permlink}"] author : optional (can be left blank but
                        not skipped), can be part of author name permlink :
                        optional (can be left blank but not skipped), can be
                        part of permlink; makes sense to pass it only with valid
                        author, but it is not checked'
                      example:
                        - skypilot
                        - an-introduction-to-where-eagles-fly-the-american-wilderness-expedition-by-zedekiah-morse
                    limit:
                      type: integer
                      description: optional 1..1000, default = 1000
                      default: 1000
                      example: 10
                    order:
                      type: string
                      enum:
                        - by_permlink
                      example: by_permlink
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Comments"
  "/#database_api.list_comments[by_root]":
    post:
      tags:
        - Database
      description: list comments
      operationId: database_api.list_comments[by_root]
      requestBody:
        description: Lists comments from given discussion indicated by root post.
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.list_comments
                params:
                  type: object
                  required:
                    - start
                    - order
                  properties:
                    start:
                      description: '["{root_author}","{root_permlink}","{start_author}","{start_permlink}"]
                        root_author + root_permlink : mandatory; points to root
                        post of discussion start_author + start_permlink :
                        optional (can be left blank but not skipped), when given
                        have to point to valid post; paging mechanism'
                      example:
                        - givemeyoursteem
                        - winners-of-steemit-food-challenge-3-desserts-to-die-for
                        - vi1son
                        - re-givemeyoursteem-winners-of-steemit-food-challenge-3-desserts-to-die-for-20160828t172955785z
                    limit:
                      type: integer
                      description: optional 1..1000, default = 1000
                      default: 1000
                      example: 10
                    order:
                      type: string
                      enum:
                        - by_root
                      example: by_root
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Comments"
  /#database_api.find_votes:
    post:
      tags:
        - Database
      description: find votes
      operationId: database_api.find_votes
      requestBody:
        description: 'Lists votes that were cast on given post. author + permlink :
          mandatory, points to valid post. Pretty much the same as "list_votes"
          with "by_comment_voter" order, but without paging and with hardcoded
          1000 limit.'
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.find_votes
                params:
                  type: object
                  required:
                    - author
                    - permlink
                  properties:
                    author:
                      type: string
                      description: author of a post to list votes
                      example: kental
                    permlink:
                      type: string
                      description: permlink to a post to link votes
                      example: hi-steem-my-russian-trip-on-the-bike-big-party-in-moscow-tour-of-moscow-by-slava
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Votes"
  /#database_api.list_votes:
    post:
      tags:
        - Database
      description: list votes
      operationId: database_api.list_votes
      requestBody:
        description: Lists votes that were cast on given post.
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - database_api.list_votes
                params:
                  type: object
                  required:
                    - start
                    - order
                  properties:
                    start:
                      description: "author + permlink : mandatory, points to valid post, start_voter :
                        optional (can be left blank but not skipped), when given
                        has to point to valid account; paging mechanism"
                      example:
                        - roelandp
                        - tldr-an-exploration-in-steem-botting-what-i-learned-since-it-s-inception-and-downfall-over-the-course-of-20-hours
                        - winstonwolfe
                    limit:
                      type: integer
                      description: limit number of listed communities
                      minimum: 1
                      maximum: 1000
                      default: 1000
                    order:
                      type: string
                      enum:
                        - by_comment_voter
                        - by_voter_comment
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: list of Votes
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Votes"
  /#hive.db_head_state:
    post:
      tags:
        - Hive
      description: DB head state
      operationId: hive.db_head_state
      requestBody:
        description: Get current head state
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - hive.db_head_state
                params:
                  type: object
                  example: {}
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: current head state
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                additionalProperties: false
                required:
                  - jsonrpc
                  - result
                  - id
                properties:
                  jsonrpc:
                    type: string
                    example: "2.0"
                  id:
                    type: integer
                    example: 1
                  result:
                    type: object
                    required:
                      - db_head_block
                      - db_head_time
                    properties:
                      db_head_block:
                        type: integer
                        example: 5000024
                      db_head_time:
                        type: string
                        format: date-time
                        example: 2016-09-15 19:48:33
  /#hive.get_info:
    post:
      tags:
        - Hive
      description: DB head state
      operationId: hive.get_info
      requestBody:
        description: Get current database and hivemind state
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - method
                - params
                - id
              properties:
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  enum:
                    - hive.get_info
                params:
                  type: object
                  example: {}
                id:
                  type: integer
                  default: 1
        required: true
      responses:
        "200":
          description: DB head state
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                additionalProperties: false
                required:
                  - jsonrpc
                  - result
                  - id
                properties:
                  jsonrpc:
                    type: string
                    example: "2.0"
                  id:
                    type: integer
                    example: 1
                  result:
                    type: object
                    required:
                      - database_head_block
                      - database_patch_date
                      - database_patched_to_revision
                      - database_schema_version
                      - hivemind_git_date
                      - hivemind_git_rev
                      - hivemind_version
                    properties:
                      database_head_block:
                        type: integer
                        example: 5000024
                      database_patch_date:
                        type: string
                        format: date-time
                        example: 2021-01-15 14:41:31.108021
                      database_patched_to_revision:
                        type: string
                        example: 6d58301a
                      database_schema_version:
                        type: integer
                        example: 29
                      hivemind_git_date:
                        type: string
                        format: date-time
                        example: 2021-01-15 14:41:31.108021
                      hivemind_git_rev:
                        type: string
                        example: 6d58301a
                      hivemind_version:
                        type: string
                        example: 1.24rc0
