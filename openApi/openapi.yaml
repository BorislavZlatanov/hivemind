openapi: 3.0.2
info:
  title: Hivemind OpenAPI Specification
  description: "An OpenAPI specification for Hivemind"
  version: 0.0.1
servers:
  - url: http://localhost:8080/
    description: Hivemind local API Service
components:
  schemas:
    "Community":
      type: object
      required:
        - id
        - about
        - avatar_url
        - context
        - created_at
        - flag_text
        - is_nsfw
        - lang
        - name
        - num_authors
        - num_pending
        - settings
        - subscribers
        - sum_pending
        - team
        - title
        - type_id
      properties:
        id:
          type: integer
        about:
          type: string
        admins:
          type: array
          items:
            type: string
        avatar_url:
          type: string
        context:
          $ref: "#/components/schemas/CommunityContext"
        created_at:
          type: string
          format: date-time
        flag_text:
          type: string
        is_nsfw:
          type: boolean
        lang:
          type: string
        name:
          type: string
        num_authors:
          type: integer
        num_pending:
          type: integer
        settings:
          type: object
        subscribers:
          type: integer
        sum_pending:
          type: integer
        team:
          $ref: "#/components/schemas/ListCommunityRoles"
        title:
          type: string
        type_id:
          type: integer

    "Profile":
      type: object
      required:
        - id
        - active
        - blacklists
        - created
        - metadata
        - name
        - post_count
        - reputation
        - stats
      properties:
        id:
          type: integer
        active:
          type: string
          format: date-time
          description: date of last activity
        blacklists:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
        metadata:
          type: object
          required:
            - profile
          properties:
            profile:
              type: object
              required:
                - about
                - blacklist_description
                - cover_image
                - location
                - muted_list_description
                - name
                - profile_image
                - website
              properties:
                about:
                  type: string
                blacklist_description:
                  type: string
                cover_image:
                  type: string
                location:
                  type: string
                muted_list_description:
                  type: string
                name:
                  type: string
                profile_image:
                  type: string
                website:
                  type: string
        name:
          type: string
        post_count:
          type: integer
        reputation:
          type: integer
        stats:
          type: object
          required:
            - followers
            - following
            - rank
          properties:
            followers:
              type: integer
            following:
              type: integer
            rank:
              type: integer

    "AccountNotifications":
      type: array
      description: "array of objects with 6 notification related fields: date, id, msg, score, type and url"
      items:
        type: object
        required:
          - date
          - id
          - msg
          - score
          - type
          - url
        properties:
          date:
            type: string
            format: date-time
            description: date of the notification
          id:
            type: integer
            description: notification id
          msg:
            type: string
            description: message of the notification
          score:
            type: integer
            description: notification score
          type:
            type: string
            description: "type of notification: follow, vote, reply, reply_comment, mention, reblog"
          url:
            type: string
            format: url
            description: end of notification url

    "DoesUserFollowAnyLists":
      type: boolean
      description: "answer to a question does user follow any list"

    "GetAccountPosts":
      type: array
      description: "array of objects with posts related fields"
      items:
        type: object
        required:
          - active_votes
          - author
          - author_payout_value
          - author_reputation
          - beneficiaries
          - blacklists
          - body
          - category
          - children
          - created
          - curator_payout_value
          - depth
          - is_paidout
          - json_metadata
          - max_accepted_payout
          - net_rshares
          - payout
          - payout_at
          - pending_payout_value
          - percent_hbd
          - permlink
          - post_id
          - promoted
          - reblogged_by
          - replies
          - stats
          - title
          - updated
          - url
        properties:
          active_votes:
            type: array
            $ref: "#/components/schemas/ActiveVotes"
          author:
            type: string
            description: account name of the post's author
          author_payout_value:
            type: string
            description: HBD paid to the author of the post
          author_reputation:
            type: number
            description: author's reputation score
          beneficiaries:
            type: array
            $ref: "#/components/schemas/Beneficiares"
          blacklists:
            type: array
            items:
              type: string
              description: "account names of blacklisted users"
          body:
            type: string
            description: post content
          category:
            type: string
            description: post category
          children:
            type: integer
            description: number of children comments
          created:
            type: string
            format: date-time
            description: creation date
          curator_payout_value:
            type: string
            description: amount of HBD paid to curators
          depth:
            type: integer
            description: nesting level
          is_paidout:
            type: boolean
            description: information whether the post has been paid
          json_metadata:
            type: object
          max_accepted_payout:
            type: string
            description: maximal possible payout
          net_rshares:
            type: integer
            description: netto rshares, result of rshares allocations
          payout:
            type: number
            description: amount of payout
          payout_at:
            type: string
            format: date-time
            description: date of payout
          pending_payout_value:
            type: string
            description: pending or paid amount
          percent_hbd:
            type: integer
            description: percent of HBD, 1000 = 100%
          permlink:
            type: string
            description: post's permlink
          post_id:
            type: integer
            description: id of the post, created from the author and the permlink
          promoted:
            type: string
            description: amount of HBD if post is promoted # TODO: check if it is true
          reblogged_by:
            type: array
            items:
              type: string
              description: account names of reblogers
          replies:
            type: array
            # TODO: description:
            items:
              type: string
              description: replies
          stats:
            type: object
            required:
              - flag_weight
              - gray
              - hide
              - total_votes
            properties:
              flag_weight:
                type: number
              gray:
                type: boolean
              hide:
                type: boolean
              total_votes:
                type: integer
          title:
            type: string
            description: post title
          updated:
            type: string
            format: date-time
            description: date of update
          url:
            type: string
            description: end of the url to the post, contains category, author and permlink

    "GetDiscussion":
    # TODO: repair display OpenAPI SwaggerUI
      type: object
      description: discussion
      $ref: "#/components/schemas/StringOfDiscussion"

    "GetFollowList":
      type: array
      description: "array with objects with follow related fields"
      items:
        type: object
        required:
          - blacklist_description
          - muted_list_description
          - name
        properties:
          blacklist_description:
            type: string
          muted_list_description:
            type: string
          name:
            type: string
            description: account name

    "GetPayoutStats":
      type: object
      description: "object with payout related fields"
      required:
        - blogs
        - items
        - total
      properties:
        blogs:
          type: number
        items:
          type: array
          items:
            allOf:
              - type: string
                description: community name
              - type: string
                description: community title
              - type: number
                description: sum
              - type: integer
              - type: integer        
        total:
          type: number

    "GetPost":
      type: object
      description: "object with payout related fields"
      required:
        - active_votes
        - author
        - author_payout_value
        - author_reputation
        - beneficiaries
        - blacklists
        - body
        - category
        - children
        - created
        - curator_payout_value
        - depth
        - is_paidout
        - json_metadata
        - max_accepted_payout
        - net_rshares
        - payout
        - payout_at
        - pending_payout_value
        - percent_hbd
        - permlink
        - post_id
        - promoted
        - replies
        - stats
        - title
        - updated
        - url
      properties:
        active_votes:
          type: array
          $ref: "#/components/schemas/ActiveVotes"
        author:
          type: string
          description: account name of the post's author
        author_payout_value:
          type: string
          description: HBD paid to the author of the post
        author_reputation:
          type: number
          description: author's reputation score
        beneficiaries:
          type: array
          $ref: "#/components/schemas/Beneficiares"
        blacklists:
          type: array
          items:
            type: string
            description: "account names of blacklisted users"
        body:
          type: string
          description: post content
        category:
          type: string
          description: post category
        children:
          type: integer
          description: number of children comments
        created:
          type: string
          format: date-time
          description: creation date
        curator_payout_value:
          type: string
          description: amount of HBD paid to curators
        depth:
          type: integer
          description: nesting level
        is_paidout:
          type: boolean
          description: information whether the post has been paid
        json_metadata:
          type: object
        max_accepted_payout:
          type: string
          description: maximal possible payout
        net_rshares:
          type: integer
          description: netto rshares, result of rshares allocations
        payout:
          type: number
          description: amount of payout
        payout_at:
          type: string
          format: date-time
          description: date of payout
        pending_payout_value:
          type: string
          description: pending or paid amount
        percent_hbd:
          type: integer
          description: percent of HBD, 1000 = 100%
        permlink:
          type: string
          description: post's permlink
        post_id:
          type: integer
          description: id of the post, created from the author and the permlink
        promoted:
          type: string
          description: amount of HBD if post is promoted # TODO: check if it is true
        replies:
          type: array
          # TODO: description:
          items:
            type: string
            description: replies
        stats:
          type: object
          required:
            - flag_weight
            - gray
            - hide
            - total_votes
          properties:
            flag_weight:
              type: number
            gray:
              type: boolean
            hide:
              type: boolean
            total_votes:
              type: integer
        title:
          type: string
          description: post title
        updated:
          type: string
          format: date-time
          description: date of update
        url:
          type: string
          description: end of the url to the post, contains category, author and permlink

    "ListCommunity":
      type: object
      required:
        - id
        - about
        - avatar_url
        - context
        - created_at
        - is_nsfw
        - lang
        - name
        - num_authors
        - num_pending
        - subscribers
        - sum_pending
        - title
        - type_id
      properties:
        id:
          type: integer
        about:
          type: string
        admins:
          type: array
          items:
            type: string
        avatar_url:
          type: string
        context:
          $ref: "#/components/schemas/CommunityContext"
        created_at:
          type: string
          format: date-time
        is_nsfw:
          type: boolean
        lang:
          type: string
        name:
          type: string
        num_authors:
          type: integer
        num_pending:
          type: integer
        subscribers:
          type: integer
        sum_pending:
          type: integer
        title:
          type: string
        type_id:
          type: integer

    "Beneficiares":
      type: object
      required:
        - account
        - weight
      properties:
        account:
          type: string
          description: account name of the beneficient
        weight:
          type: integer
          description: benefit amount (10000 = 100%)

    "ActiveVotes":
      type: object
      required:
        - rshares
        - voter
      properties:
        rshaers:
          type: integer
        voter:
          type: string
          description: "account name of the voter"

    "CommunityContext":
      type: object
      properties:
        role:
          type: string
        subscribed:
          type: boolean
        title:
          type: string
          maxLength: 140
          minLength: 0

    "ListAllSubscriptions":
      type: array
      items:
        type: array
        items:
          type: string
        minItems: 4
        maxItems: 4

    "ListCommunityRoles":
      type: array
      description: "array of arrays with 3 strings: name, role_name, title"
      items:
        type: array
        items:
          type: string
        minItems: 3
        maxItems: 3

    "ListPopCommunities":
      type: array
      description: "array of arrays with 2 strings: community name and title"
      items:
        type: array
        items:
          type: string
        minItems: 2
        maxItems: 2

    "ListSubscribers":
      type: array
      description: "array of arrays with 4 strings: account name, role name, title, created_at"
      items:
        type: array
        items:
          type: string
        minItems: 4
        maxItems: 4

    "StringOfDiscussion":
      type: string
      description: "author + permlink"
      items:
        $ref: "#/components/schemas/Discussion"
        
    "Discussion":
      type: object
      required:
        - active_votes
        - author
        - author_payout_value
        - author_reputation
        - beneficiaries
        - blacklists
        - body
        - category
        - children
        - created
        - curator_payout_value
        - depth
        - is_paidout
        - json_metadata
        - max_accepted_payout
        - net_rshares
        - parent_author
        - parent_permlink
        - payout
        - payout_at
        - pending_payout_value
        - percent_hbd
        - permlink
        - post_id
        - promoted
        - replies
        - stats
        - title
        - updated
        - url
      properties:
        active_votes:
          type: array
          $ref: "#/components/schemas/ActiveVotes"
        author:
          type: string
          description: account name of the post's author
        author_payout_value:
          type: string
          description: HBD paid to the author of the post
        author_reputation:
          type: number
          description: author's reputation score
        author_role:
          type: string
          description: author's community role (if post is in community)
        author_title:
          type: string
          description: author's community title (if post is in community)
        beneficiaries:
          type: array
          $ref: "#/components/schemas/Beneficiares"
        blacklists:
          type: array
          items:
            type: string
            description: "account names of blacklisted users"
        body:
          type: string
          description: post content
        category:
          type: string
          description: post category
        children:
          type: integer
          description: number of children comments
        created:
          type: string
          format: date-time
          description: creation date
        curator_payout_value:
          type: string
          description: amount of HBD paid to curators
        depth:
          type: integer
          description: nesting level
        is_paidout:
          type: boolean
          description: information whether the post has been paid
        json_metadata:
          type: object
        max_accepted_payout:
          type: string
          description: maximal possible payout
        net_rshares:
          type: integer
          description: netto rshares, result of rshares allocations
        parent_author:
          type: string
          description: account name of parent post author
        parent_permlink:
          type: string
          description: post's permlink of parent post
        payout:
          type: number
          description: amount of payout
        payout_at:
          type: string
          format: date-time
          description: date of payout
        pending_payout_value:
          type: string
          description: pending or paid amount
        percent_hbd:
          type: integer
          description: percent of HBD, 1000 = 100%
        permlink:
          type: string
          description: post's permlink
        post_id:
          type: integer
          description: id of the post, created from the author and the permlink
        promoted:
          type: string
          description: amount of HBD if post is promoted # TODO: check if it is true
        replies:
          type: array
          items:
            type: string
            description: author/permlink replies of the post
        stats:
          type: object
          required:
            - flag_weight
            - gray
            - hide
            - total_votes
          properties:
            flag_weight:
              type: number
            gray:
              type: boolean
            hide:
              type: boolean
            total_votes:
              type: integer
        title:
          type: string
          description: post title
        updated:
          type: string
          format: date-time
          description: date of update
        url:
          type: string
          description: end of the url to the post, contains category, author and permlink

    "ErrorMessage":
      type: object
      required:
        - jsonrpc
        - error
        - id
      properties:
        jsonrpc:
          type: string
        error:
          type: object
          required:
            - code
            - message
            - data
          properties:
            code:
              type: string
            message:
              type: string
            data:
              type: string
        id:
          type: integer

    "CommunityContextRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_community_context
        params:
          type: object
          required:
            - name
            - account
          properties:
            name:
              type: string
              description: "community name"
              example: "hive-189306"
            account:
              type: string
              description: "account name"
              example: "good-karma"
        id:
          type: integer
          default: 1

    "CommunityRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_community
        params:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              description: "community name"
              example: "hive-189306"
            observer:
              type: string
              description: "account name"
              example: "good-karma"
        id:
          type: integer
          default: 1

    "ListAllSubscriptionsRequest":
      required:
        - jsonrpc
        - method
        - params
        - id
      type: object
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_all_subscriptions
        params:
          type: object
          required:
            - account
          properties:
            account:
              type: string
              description: "account name"
              example: "good-karma"
        id:
          type: integer
          default: 1

    "ListCommunitesRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_communitites
        params:
          type: object
          properties:
            last:
              type: string
              description: 'name of community; paging mechanism (cuts out this and "higher" communities, depends on chosen ranking)'
              example: "hive-189306"
            limit:
              type: integer
              description: "limit number of listed communities"
              minimum: 1
              maximum: 100
              default: 100
            query:
              type: string
              description: 'when given turns on filtering for given set of words - words are looked for in "title" and "about" fields'
              example: "Hive"
            sort:
              type: string
              description: " determines order of returned communities"
              enum:
                - "rank"
                - "new"
                - "subs"
              default: "rank"
            observer:
              type: string
              description: "(can be skipped or passed empty), when passed has to point to valid account used to show relation between account and community (subscribed, role and title)"
              example: "good-karma"
        id:
          type: integer
          default: 1

    "ListCommunityRolesRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_community_roles
        params:
          type: object
          required:
            - community
          properties:
            community:
              type: string
              description: "community name"
              example: "hive-189306"
            last:
              type: string
              description: 'name of community; paging mechanism (cuts out this and "higher" communities, depends on chosen ranking)'
              example: "hive-189306"
            limit:
              type: integer
              description: "limit number of listed communities"
              minimum: 1
              maximum: 100
              default: 100
        id:
          type: integer
          default: 1

    "ListPopCommunitesRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_pop_communitites
        params:
          type: object
          properties:
            limit:
              type: integer
              description: "limit number of listed communities"
              minimum: 1
              maximum: 25
              default: 25
        id:
          type: integer
          default: 1

    "ListSubscribersRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_pop_communitites
        params:
          type: object
          required:
            - community
          properties:
            community:
              type: string
              description: "community name"
              example: "hive-189306"
            last:
              type: string
              description: ' name of subscriber; paging mechanism (cuts out this and "higher" subscribers, depends on created at desc)'
              example: "hive-189306"
            limit:
              type: integer
              description: "limit number of listed subscribers"
              minimum: 1
              maximum: 100
              default: 100
        id:
          type: integer
          default: 1

    "GetProfileRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_profile
        params:
          type: object
          required:
            - account
          properties:
            account:
              type: string
              description: "account name"
              example: "blocktrades"
            observer:
              type: string
              description: "account name of observer, used to add information about relationship of observer with given profile account"
              example: "gtg"
        id:
          type: integer
          default: 1

    "AccountNotificationsRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.account_notifications
        params:
          type: object
          required:
            - account
          properties:
            account:
              type: string
              description: "account name"
              example: "blocktrades"
            min_score:
              type: integer
              description: "minimal score of notifications to show"
              minimum: 0
              maximum: 100
              default: 25
            last_id:
              type: integer
              description: "indicates newest notification to show; paging mechanism"
              default: null
            limit:
              type: integer
              description: "limit number of listed notifications"
              minimum: 1
              maximum: 100
              default: 100
        id:
          type: integer
          default: 1

    "DoesUserFollowAnyListsRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.does_user_follow_any_lists
        params:
          type: object
          required:
            - observer
          properties:
            observer:
              type: string
              description: "account name"
              example: "blocktrades"
        id:
          type: integer
          default: 1

    "GetAccountPostsRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_account_posts
        params:
          type: object
          required:
            - sort
            - account
          properties:
            sort:
              type: string
              enum: [blog, feed, posts, comments, replies, payout]
              description: |
                ### Sort order:
                blog - top posts authored by given account (excluding posts to communities - unless explicitely reblogged) plus reblogs ranked by creation/reblog time  
                feed - top posts from blogs of accounts that given account is following ranked by creation/reblog time, not older than last month  
                posts - op posts authored by given account, newer first  
                comments - replies authored by given account, newer first  
                replies - replies to posts of given account, newer first  
                payout - all posts authored by given account that were not yet cashed out
              example: "blog"
            account:
              type: string
              description: account name, points to valid account
              example: "blocktrades"
            start_author:
              type: string
              description: author account name, if passed must be passed with start_permlink
            start_permlink:
              type: string
              description: post permlink of given author, point to valid post, paging mechanism
            limit:
              type: integer
              minimum: 1
              maximum: 100
              default: 20
            observer:
              type: string
              description: ignored for blog, feed and replies, otherwise when passed has to point to valid account used to fill blacklist stats and mark posts of authors blacklisted by observer, at this time ignored
              # TODO: observer
              example: "blocktrades"
        id:
          type: integer
          default: 1

    "GetDiscussionRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_discussion
        params:
          type: object
          required:
            - author
            - permlink
          properties:
            author:
              type: string
              description: valid account name
              example: "blocktrades"
            permlink:
              type: string
              description: post permlink of given author, have to point on valid post
              example: "4th-update-of-2021-on-our-hive-software-work"
            observer:
              type: string
              description: account name, used to filter out discussion branches starting at posts authored by accounts ignored directly or indirectly by the observer
              example: "gtg"
        id:
          type: integer
          default: 1


    "GetFollowListRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_follow_list
        params:
          type: object
          required:
            - observer
          properties:
            observer:
              type: string
              description: valid account name
              example: "blocktrades"
            follow_type:
              type: string
              enum: [blacklisted, follow_blacklist, muted, follow_muted]
              description: type of followow
              default: 'blacklisted'
        id:
          type: integer
          default: 1

    "GetPayoutStatsRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_follow_list
        params:
          type: object
          properties:
            limit:
              type: integer
              minimum: 1
              maximum: 250
              default: 250
        id:
          type: integer
          default: 1

    "GetPostRequest":
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_follow_list
        params:
          type: object
          required:
            - author
            - permlink
          properties:
            author:
              type: string
              description: name of the post author's account
              example: "blocktrades"
            permlink:
              type: string
              description: permlink of the valid author's post
              example: "witness-report-for-blocktrades-for-last-week-of-august"
            observer:
              type: string
              description: used to add blacklist information to given post
              example: "gtg"
        id:
          type: integer
          default: 1

paths:
  /#bridge.get_community:
    post:
      description: Gets community
      operationId: bridge.get_community
      requestBody:
        description: community name and optional observer
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CommunityRequest"
        required: true
      responses:
        "200":
          description: Community result
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Community"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.get_community_context:
    post:
      description: Gets community context
      operationId: bridge.get_community_context
      requestBody:
        description: community name and account for context
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CommunityContextRequest"
        required: true
      responses:
        "200":
          description: Community context result
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/CommunityContext"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.list_all_subscriptions:
    post:
      description: Lists all community contexts from communities given account is subscribed to.
      operationId: bridge.list_all_subscriptions
      requestBody:
        description: points to valid account (not necessarily subscibed to any community)
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ListAllSubscriptionsRequest"
        required: true
      responses:
        "200":
          description: all subscriptions list
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ListAllSubscriptions"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.list_communities:
    post:
      description: Gets community
      operationId: bridge.list_communities
      requestBody:
        description: "optional parameters: last, limit, query, sort, observer"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ListCommunitesRequest"
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ListCommunity"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.list_community_roles:
    post:
      description: Gets community
      operationId: bridge.list_community_roles
      requestBody:
        description: community name and optional observer
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ListCommunityRolesRequest"
        required: true
      responses:
        "200":
          description: list of Community roles
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ListCommunityRoles"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.list_pop_communities:
    post:
      description: Gets community
      operationId: bridge.list_pop_communities
      requestBody:
        description: "optional parameter: limit"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ListPopCommunitesRequest"
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ListPopCommunities"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.list_subscribers:
    post:
      description: list subscribers
      operationId: bridge.list_subscribers
      requestBody:
        description: "required community, optional: last, limit"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ListSubscribersRequest"
        required: true
      responses:
        "200":
          description: list of Communities
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ListSubscribers"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.get_profile:
    post:
      description: Gets profile
      operationId: bridge.get_profile
      requestBody:
        description: "required account, optional: observer"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/GetProfileRequest"
        required: true
      responses:
        "200":
          description: profile information
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Profile"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.account_notifications:
    post:
      description: Lists notifications for given account
      operationId: bridge.account_notifications
      requestBody:
        description: "required account, optional: min_score, last_id, limit"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/AccountNotificationsRequest"
        required: true
      responses:
        "200":
          description: list of notifications
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AccountNotifications"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.does_user_follow_any_lists:
    post:
      description: Tells if given observer follows any blacklist or mute list
      operationId: bridge.does_user_follow_any_lists
      requestBody:
        description: "required observer"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/DoesUserFollowAnyListsRequest"
        required: true
      responses:
        "200":
          description: Answer whether the observer follow any list
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/DoesUserFollowAnyLists"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.get_account_posts:
    post:
      description: Lists posts related to given account in selected way.
      operationId: bridge.get_account_posts
      requestBody:
        description: "required: sort, account, optional: start_author, start_permlink, limit, observer"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/GetAccountPostsRequest"
        required: true
      responses:
        "200":
          description: |
            List of posts
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/GetAccountPosts"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.get_discussion:
    post:
      description: Gives flattened discussion tree starting at given post.
      operationId: bridge.get_discussion
      requestBody:
        description: "required: author, permlink, optional: observer"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/GetDiscussionRequest"
        required: true
      responses:
        "200":
          description: |
            List of discussion post
          content:
            "application/json":
              schema:
                oneOf:
                  - style: deepObject
                    $ref: "#/components/schemas/GetDiscussion"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.get_follow_list:
    post:
      description: For given observer gives directly blacklisted/muted accounts or list of blacklists/mute lists followed by observer
      operationId: bridge.get_follow_list
      requestBody:
        description: "required: observer, optional: follow_type"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/GetFollowListRequest"
        required: true
      responses:
        "200":
          description: List of blacklisted/ muted lists
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/GetFollowList"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.get_payout_stats:
    post:
      description: Lists communities ordered by payout with stats (total payout, number of posts and authors).
      operationId: bridge.get_payout_stats
      requestBody:
        description: "optional: limit"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/GetPayoutStatsRequest"
        required: true
      responses:
        "200":
          description: List of communities with stats.
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/GetPayoutStats"
                  - $ref: "#/components/schemas/ErrorMessage"

  /#bridge.get_post:
    post:
      description: Gives single selected post.
      operationId: bridge.get_post
      requestBody:
        description: "required: author, permlink, optional: observer"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/GetPostRequest"
        required: true
      responses:
        "200":
          description: Selected post
          content:
            "application/json":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/GetPost"
                  - $ref: "#/components/schemas/ErrorMessage"