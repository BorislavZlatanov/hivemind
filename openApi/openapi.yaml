openapi: 3.0.2
info:
  title: Hivemind OpenAPI Specification
  description: 'An OpenAPI specification for Hivemind'
  version: 0.0.1
servers:
  - url: http://localhost:8080/
    description: Hivemind local API Service
components:
  schemas:
    'Community':
      type: object
      required:
        - id
        - about
        - avatar_url
        - context
        - created_at
        - flag_text
        - is_nsfw
        - lang
        - name
        - num_authors
        - num_pending
        - settings
        - subscribers
        - sum_pending
        - team
        - title
        - type_id
      properties:
        id:
          type: integer
        about:
          type: string
        admins:
          type: array
          items:
            type: string
        avatar_url:
          type: string
        context:
          $ref: '#/components/schemas/CommunityContext'
        created_at:
          type: string
          format: date-time
        flag_text:
          type: string
        is_nsfw:
          type: boolean
        lang:
          type: string
        name:
          type: string
        num_authors:
          type: integer
        num_pending:
          type: integer
        settings:
          type: object
        subscribers:
          type: integer
        sum_pending:
          type: integer
        team:
          $ref: '#/components/schemas/ListCommunityRoles'
        title:
          type: string
        type_id:
          type: integer

    'ListCommunity':
      type: object
      required:
        - id
        - about
        - avatar_url
        - context
        - created_at
        - is_nsfw
        - lang
        - name
        - num_authors
        - num_pending
        - subscribers
        - sum_pending
        - title
        - type_id
      properties:
        id:
          type: integer
        about:
          type: string
        admins:
          type: array
          items:
            type: string
        avatar_url:
          type: string
        context:
          $ref: '#/components/schemas/CommunityContext'
        created_at:
          type: string
          format: date-time
        is_nsfw:
          type: boolean
        lang:
          type: string
        name:
          type: string
        num_authors:
          type: integer
        num_pending:
          type: integer
        subscribers:
          type: integer
        sum_pending:
          type: integer
        title:
          type: string
        type_id:
          type: integer

    'CommunityContext':
      type: object
      properties:
        role:
          type: string
        subscribed:
          type: boolean
        title:
          type: string
          maxLength: 140
          minLength: 0

    'ListAllSubscriptions':
      type: array
      items:
        type: array
        items:
          type: string
        minItems: 4
        maxItems: 4

    'ListCommunityRoles':
      type: array
      description: "array of arrays with 3 strings: name, role_name, title"
      items:
        type: array
        items:
          type: string
        minItems: 3
        maxItems: 3

    'ListPopCommunities':
      type: array
      description: "array of arrays with 2 strings: community name and title"
      items:
        type: array
        items:
          type: string
        minItems: 2
        maxItems: 2

    'ListSubscribers':
      type: array
      description: "array of arrays with 4 strings: account name, role name, title, created_at"
      items:
        type: array
        items:
          type: string
        minItems: 4
        maxItems: 4

    'ErrorMessage':
      type: object
      required:
        - jsonrpc
        - error
        - id
      properties:
        jsonrpc:
          type: string
        error:
          type: object
          required:
            - code
            - message
            - data
          properties:
            code:
              type: string
            message:
              type: string
            data:
              type: string
        id:
          type: integer

    'CommunityContextRequest':
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_community_context
        params:
          type: object
          required:
            - name
            - account
          properties:
            name:
              type: string
              description: 'community name'
              example: 'hive-189306'
            account:
              type: string
              description: 'account name'
              example: 'good-karma'
        id:
          type: integer
          default: 1

    'CommunityRequest':
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.get_community
        params:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              description: 'community name'
              example: 'hive-189306'
            observer:
              type: string
              description: 'account name'
              example: 'good-karma'
        id:
          type: integer
          default: 1

    'ListAllSubscriptionsRequest':
      required:
        - jsonrpc
        - method
        - params
        - id
      type: object
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_all_subscriptions
        params:
          type: object
          required:
            - account
          properties:
            account:
              type: string
              description: 'account name'
              example: 'good-karma'
        id:
          type: integer
          default: 1

    'ListCommunitesRequest':
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_communitites
        params:
          type: object
          properties:
            last:
              type: string
              description: 'name of community; paging mechanism (cuts out this and "higher" communities, depends on chosen ranking)'
              example: 'hive-189306'
            limit:
              type: integer
              description: 'limit number of listed communities'
              minimum: 1
              maximum: 100
              default: 100
            query:
              type: string
              description: 'when given turns on filtering for given set of words - words are looked for in "title" and "about" fields'
              example: 'Hive'
            sort:
              type: string
              description: ' determines order of returned communities'
              enum:
                - 'rank'
                - 'new'
                - 'subs'
              default: 'rank'
            observer:
              type: string
              description: '(can be skipped or passed empty), when passed has to point to valid account used to show relation between account and community (subscribed, role and title)'
              example: 'good-karma'
        id:
          type: integer
          default: 1

    'ListCommunityRolesRequest':
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_community_roles
        params:
          type: object
          required:
            - community
          properties:
            community:
              type: string
              description: 'community name'
              example: 'hive-189306'
            last:
              type: string
              description: 'name of community; paging mechanism (cuts out this and "higher" communities, depends on chosen ranking)'
              example: 'hive-189306'
            limit:
              type: integer
              description: 'limit number of listed communities'
              minimum: 1
              maximum: 100
              default: 100
        id:
          type: integer
          default: 1

    'ListPopCommunitesRequest':
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_pop_communitites
        params:
          type: object
          properties:
            limit:
              type: integer
              description: 'limit number of listed communities'
              minimum: 1
              maximum: 25
              default: 25
        id:
          type: integer
          default: 1

    'ListSubscribersRequest':
      type: object
      required:
        - jsonrpc
        - method
        - params
        - id
      properties:
        jsonrpc:
          type: string
          default: "2.0"
        method:
          type: string
          enum:
            - bridge.list_pop_communitites
        params:
          type: object
          required:
            - community
          properties:
            community:
              type: string
              description: 'community name'
              example: 'hive-189306'
            last:
              type: string
              description: ' name of subscriber; paging mechanism (cuts out this and "higher" subscribers, depends on created at desc)'
              example: 'hive-189306'
            limit:
              type: integer
              description: 'limit number of listed subscribers'
              minimum: 1
              maximum: 100
              default: 100
        id:
          type: integer
          default: 1

paths:
  /#bridge.get_community:
    post:
      description: Gets community
      operationId: bridge.get_community
      requestBody:
        description: community name and optional observer
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CommunityRequest'
        required: true
      responses:
        '200':
          description: Community result
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Community'
                  - $ref: '#/components/schemas/ErrorMessage'

  /#bridge.get_community_context:
    post:
      description: Gets community context
      operationId: bridge.get_community_context
      requestBody:
        description: community name and account for context
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CommunityContextRequest'
        required: true
      responses:
        '200':
          description: Community context result
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CommunityContext'
                  - $ref: '#/components/schemas/ErrorMessage'

  /#bridge.list_all_subscriptions:
    post:
      description: Lists all community contexts from communities given account is subscribed to.
      operationId: bridge.list_all_subscriptions
      requestBody:
        description: points to valid account (not necessarily subscibed to any community)
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ListAllSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: all subscriptions list
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListAllSubscriptions'
                  - $ref: '#/components/schemas/ErrorMessage'

  /#bridge.list_communities:
    post:
      description: Gets community
      operationId: bridge.list_communities
      requestBody:
        description: 'optional parameters: last, limit, query, sort, observer'
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ListCommunitesRequest'
        required: true
      responses:
        '200':
          description: list of Communities
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListCommunity'
                  - $ref: '#/components/schemas/ErrorMessage'

  /#bridge.list_community_roles:
    post:
      description: Gets community
      operationId: bridge.list_community_roles
      requestBody:
        description: community name and optional observer
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ListCommunityRolesRequest'
        required: true
      responses:
        '200':
          description: list of Community roles
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListCommunityRoles'
                  - $ref: '#/components/schemas/ErrorMessage'

  /#bridge.list_pop_communities:
    post:
      description: Gets community
      operationId: bridge.list_pop_communities
      requestBody:
        description: 'optional parameter: limit'
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ListPopCommunitesRequest'
        required: true
      responses:
        '200':
          description: list of Communities
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListPopCommunities'
                  - $ref: '#/components/schemas/ErrorMessage'

  /#bridge.list_subscribers:
    post:
      description: list subscribers
      operationId: bridge.list_subscribers
      requestBody:
        description: 'required community, optional: last, limit'
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ListSubscribersRequest'
        required: true
      responses:
        '200':
          description: list of Communities
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListSubscribers'
                  - $ref: '#/components/schemas/ErrorMessage'