# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ActiveVotes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rshaers=None, voter=None):  # noqa: E501
        """ActiveVotes - a model defined in OpenAPI

        :param rshaers: The rshaers of this ActiveVotes.  # noqa: E501
        :type rshaers: int
        :param voter: The voter of this ActiveVotes.  # noqa: E501
        :type voter: str
        """
        self.openapi_types = {
            'rshaers': int,
            'voter': str
        }

        self.attribute_map = {
            'rshaers': 'rshaers',
            'voter': 'voter'
        }

        self._rshaers = rshaers
        self._voter = voter

    @classmethod
    def from_dict(cls, dikt) -> 'ActiveVotes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ActiveVotes of this ActiveVotes.  # noqa: E501
        :rtype: ActiveVotes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rshaers(self):
        """Gets the rshaers of this ActiveVotes.


        :return: The rshaers of this ActiveVotes.
        :rtype: int
        """
        return self._rshaers

    @rshaers.setter
    def rshaers(self, rshaers):
        """Sets the rshaers of this ActiveVotes.


        :param rshaers: The rshaers of this ActiveVotes.
        :type rshaers: int
        """

        self._rshaers = rshaers

    @property
    def voter(self):
        """Gets the voter of this ActiveVotes.

        account name of the voter  # noqa: E501

        :return: The voter of this ActiveVotes.
        :rtype: str
        """
        return self._voter

    @voter.setter
    def voter(self, voter):
        """Sets the voter of this ActiveVotes.

        account name of the voter  # noqa: E501

        :param voter: The voter of this ActiveVotes.
        :type voter: str
        """
        if voter is None:
            raise ValueError("Invalid value for `voter`, must not be `None`")  # noqa: E501

        self._voter = voter
