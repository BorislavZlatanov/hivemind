# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class DoesUserFollowAnyListsRequestParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, observer=None):  # noqa: E501
        """DoesUserFollowAnyListsRequestParams - a model defined in OpenAPI

        :param observer: The observer of this DoesUserFollowAnyListsRequestParams.  # noqa: E501
        :type observer: str
        """
        self.openapi_types = {
            'observer': str
        }

        self.attribute_map = {
            'observer': 'observer'
        }

        self._observer = observer

    @classmethod
    def from_dict(cls, dikt) -> 'DoesUserFollowAnyListsRequestParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DoesUserFollowAnyListsRequest_params of this DoesUserFollowAnyListsRequestParams.  # noqa: E501
        :rtype: DoesUserFollowAnyListsRequestParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def observer(self):
        """Gets the observer of this DoesUserFollowAnyListsRequestParams.

        account name  # noqa: E501

        :return: The observer of this DoesUserFollowAnyListsRequestParams.
        :rtype: str
        """
        return self._observer

    @observer.setter
    def observer(self, observer):
        """Sets the observer of this DoesUserFollowAnyListsRequestParams.

        account name  # noqa: E501

        :param observer: The observer of this DoesUserFollowAnyListsRequestParams.
        :type observer: str
        """
        if observer is None:
            raise ValueError("Invalid value for `observer`, must not be `None`")  # noqa: E501

        self._observer = observer
