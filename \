INSERT INTO hive_votes
                    (post_id, voter_id, author_id, permlink_id, weight, rshares, vote_percent, last_update) 
                    select data_source.post_id, data_source.voter_id, data_source.author_id, data_source.permlink_id, data_source.weight, data_source.rshares, data_source.vote_percent, data_source.last_update
                    from 
                    (
                    SELECT hp.id as post_id, ha_v.id as voter_id, ha_a.id as author_id, hpd_p.id as permlink_id, t.weight, t.rshares, t.vote_percent, t.last_update
                    from
                    (
                    VALUES
                    --   voter, author, permlink, weight, rshares, vote_percent, last_update
                      {}
                    ) AS T(voter, author, permlink, weight, rshares, vote_percent, last_update)
                    INNER JOIN hive_accounts ha_v ON ha_v.name = 'murah'
                    INNER JOIN hive_accounts ha_a ON ha_a.name = 'steemit'
                    INNER JOIN hive_permlink_data hpd_p ON hpd_p.permlink = 'firstpost'
                    INNER JOIN hive_posts hp ON hp.author_id = ha_a.id AND hp.permlink_id = hpd_p.id  
                    ) as data_source(post_id, voter_id, author_id, permlink_id, weight, rshares, vote_percent, last_update)
                    ON CONFLICT ON CONSTRAINT hive_votes_ux1 DO
                      UPDATE
                        SET
                          weight = EXCLUDED.weight,
                          rshares = EXCLUDED.rshares,
                          vote_percent = EXCLUDED.vote_percent,
                          last_update = EXCLUDED.last_update,
                          num_changes = hive_votes.num_changes + 1
                      WHERE hive_votes.id = EXCLUDED.id;
